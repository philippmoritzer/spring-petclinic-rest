name: Build-Test-Deploy-Heroku-Dev

on:
  push:
    branches:
      - develop

    tags:
      - v*
    pull_request:
      - develop

env:
  IMAGE_NAME_DEV: for_testing_image
  IMAGE_NAME_PROD: moritzer-petclinic

jobs:
  Build-And-Test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build Docker Dev Image for testing purposes
        run: docker build . --file dev.Dockerfile --tag $IMAGE_NAME_DEV
      - name: Run Docker Container
        run: docker run -d --name petclinic -p 9966:9966 $IMAGE_NAME_DEV:latest
      - name: Run Maven unit tests in Docker Directory
        run: docker exec -w /spring-petclinic-rest/ petclinic mvn test
      - name: Setup Node-environment for Postman Tests
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Install Newman (Postman Headless-Runner)
        run: npm install -g newman
      - name: Run Postman Test Collection
        run: newman run https://www.getpostman.com/collections/aa0611affb8560601a98?apikey=${{secrets.POSTMAN_API_KEY}}

  Deploy:
    needs: Build-And-Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build Docker Prod Image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME_PROD
      - name: Log into Github Docker Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
      - name: Push Docker image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME_PROD
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME_PROD $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
      - name: Login to Heroku Container Registry
        env:
          HEROKU_API_KEY: ${{secrets.HEROKU_API_KEY}}
        run: heroku container:login
      - name: Push to Heroku Container Registry
        env:
          HEROKU_API_KEY: ${{secrets.HEROKU_API_KEY}}
        run: heroku container:push -a ${{secrets.HEROKU_DEV_ENV_REST}} web
      - name: Release
        env:
          HEROKU_API_KEY: ${{secrets.HEROKU_API_KEY}}
        run: heroku container:release -a ${{secrets.HEROKU_DEV_ENV_REST}} web


